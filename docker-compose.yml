
version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: abetworks-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-abetworks}
      POSTGRES_USER: ${POSTGRES_USER:-abetworks}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-abetworks}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - abetworks-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: abetworks-api
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-abetworks}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-abetworks}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: production
      PYTHON_API_KEY: ${PYTHON_API_KEY}
      PYTHON_AGENT_URL: http://python-agents:8000
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - abetworks-network
    restart: unless-stopped

  python-agents:
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: abetworks-python-agents
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-abetworks}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-abetworks}
      PYTHON_API_KEY: ${PYTHON_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      NODE_API_URL: http://api:5000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - abetworks-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: abetworks-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    networks:
      - abetworks-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  abetworks-network:
    driver: bridge
